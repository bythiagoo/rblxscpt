
repeat wait() until game:IsLoaded()

local Player = game:GetService("Players").LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local VirtualUser = game:GetService("VirtualUser")

local SelectedQuest = "BanditQuest"
local SelectedTool = "Combat"
local Quest = {}
local Tool = {}
local Island = {}
local Npc = {}
local Shop = {}

Player.Idled:Connect(function()
    VirtualUser:ClickButton2(Vector2.new())
end)

for i, v in pairs(game:GetService("Workspace").QuestBoard:GetChildren()) do
    for a, b in pairs(v:GetChildren()) do
        if b.Name:match("Quest") then
            table.insert(Quest,b.Name)
        end
    end
end

table.sort(Quest)

for i, v in pairs(Player.Backpack:GetChildren()) do
    if v:IsA("Tool") then
        table.insert(Tool,v.Name)
    end
end

for i, v in pairs(Player.Character:GetChildren()) do
    if v:IsA("Tool") then
        table.insert(Tool,v.Name)
    end
end

for i, v in pairs(game:GetService("Workspace").Map.SpawnPoints:GetChildren()) do
    table.insert(Island,v.Name)
end

for i, v in pairs(game:GetService("Workspace").Map.NPCs:GetChildren()) do
    table.insert(Npc,v.Name)
end

for i, v in pairs(game:GetService("Workspace").Map.Shops:GetChildren()) do
    table.insert(Shop,v.Name)
end

function EquipTool()
    if not Player.Character:FindFirstChild("BusoArm") then
        ReplicatedStorage.RemoteEvents.Busoshoku:FireServer()
    end
    VirtualUser:Button1Down(Vector2.new(69, 69))
    Player.Character.Humanoid:EquipTool(Player.Backpack:FindFirstChild(SelectedTool))
end

function Teleport(a)
    Player.Character.HumanoidRootPart.CFrame = a
end

function GetQuestTele()
    for i2, v2 in pairs(game:GetService("Workspace").QuestBoard:GetChildren()) do
        for i3, v3 in pairs(v2:GetChildren()) do
            if v3.Name == SelectedQuest then
                return v3
            end
        end
    end
end

function AutoBring()
    task.spawn(function()
        while task.wait(.3) do
            if not _G.AutoBring then break end
            if _G.AutoFarm then
                pcall(function()
                    local QuestTele = GetQuestTele()
                    local Mob = string.split(SelectedQuest,"Quest")
                    for i, v in pairs(game:GetService("Workspace").Map.Live:GetChildren()) do
                        if v.Name:lower():match(Mob[1]:lower()) and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and _G.AutoFarm then
                            v.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,-2) 
                            Teleport(QuestTele.CFrame * CFrame.new(0,30,0))
                        end
                    end
                end)
            end
        end
    end)
end

function AutoFarm()
    task.spawn(function()
        while task.wait(.3) do
            if not _G.AutoFarm then break end
            pcall(function()
                local Mob = string.split(SelectedQuest,"Quest")
                for i, v in pairs(game:GetService("Workspace").Map.Live:GetChildren()) do
                    if v.Name:lower():match(Mob[1]:lower()) and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and _G.AutoFarm then
                        repeat task.wait()
                            if not Player.PlayerGui:FindFirstChild("QuestsGUI") then
                                for i, v in pairs(game:GetService("Workspace").QuestBoard:GetChildren()) do
                                    for a, b in pairs(v:GetChildren()) do
                                        if b.Name == SelectedQuest then
                                            Teleport(b.CFrame)
                                            fireproximityprompt(b.ProximityPrompt)
                                        end
                                    end
                                end
                            else
                                EquipTool()
                                Teleport(v.HumanoidRootPart.CFrame * CFrame.new(0,5,0) * CFrame.Angles(math.rad(-90),0,0))
                            end
                        until not _G.AutoFarm or v.Humanoid.Health <= 0
                    end
                end     
            end)
        end
    end)
end

function AutoSkill()
    task.spawn(function()
        while task.wait(.4) do
            if not _G.AutoSkill then break end
            for i, v in pairs({"E","R","Z","X","C","V"}) do
                VirtualInputManager:SendKeyEvent(true, v, false, game)
                VirtualInputManager:SendKeyEvent(false, v, false, game)
                task.wait()
            end
        end
    end)
end

function AddStat(a)
    local args = {
        [1] = Player.PlayerValues,
        [2] = Player.PlayerValues.StrengthLevel,
        [3] = Player.PlayerValues.DefenseLevel,
        [4] = Player.PlayerValues.SwordLevel,
        [5] = Player.PlayerValues.GunLevel,
        [6] = a,
        [7] = 1
    }
    ReplicatedStorage.RemoteEvents.StatPoint:InvokeServer(unpack(args))
end

function AStrength()
    task.spawn(function()
        while task.wait() do
            if not _G.Strength then break end
            AddStat(Player.PlayerValues.StrengthLevel)
        end
    end)
end

function ADefense()
    task.spawn(function()
        while task.wait() do
            if not _G.Defense then break end
            AddStat(Player.PlayerValues.DefenseLevel)
        end
    end)
end

function ASword()
    task.spawn(function()
        while task.wait() do
            if not _G.Sword then break end
            AddStat(Player.PlayerValues.SwordLevel)
        end
    end)
end

function AGun()
    task.spawn(function()
        while task.wait() do
            if not _G.Gun then break end
            AddStat(Player.PlayerValues.GunLevel)
        end
    end)
end

function Hide()
    task.spawn(function()
        while task.wait() do
            if not _G.Hide then break end            
            pcall(function()
                if Player.Character.Head:FindFirstChild("NameDisplay") then
                    Player.Character.Head.NameDisplay:Destroy()
                end
            end)
        end
    end) 
end

function AutoChest()
    task.spawn(function()
        while task.wait() do
            if not _G.AutoChest then break end
            pcall(function()
                for i, v in pairs(game.Workspace.Map.Chests.Chest:GetChildren()) do
                    if v.Name == "ProximityPrompt" then
                        Teleport(v.Parent.CFrame)
                        fireproximityprompt(v)
                    end
                end
            end)
        end
    end)
end

function AutoGetFruit()
    task.spawn(function()
        while task.wait() do
            if not _G.AutoGetFruit then break end
            pcall(function()
                for i, v in pairs(game.Workspace:GetChildren()) do
                    if v:IsA("Tool") then
                        Player.Character.Humanoid:EquipTool(v)
                    end
                end
            end)
        end
    end)  
end

local mt = getrawmetatable(game)
local oldnc = mt.__namecall

setreadonly(mt,false)

mt.__namecall = function(self,...)
	local method = getnamecallmethod()
	if method == "Kick" and self == Player then
		return
	end
	return oldnc(self,...)
end

setreadonly(mt,true)

if _G.C1 then _G.C1:Disconnect() end
_G.C1 = RunService.Stepped:connect(function()
    pcall(function()
        sethiddenproperty(Player, "SimulationRadius", 1000)
        if _G.autofarm then
            ReplicatedStorage.RemoteEvents.CombatBase:FireServer()	
            for i, v in pairs(Player.Character:GetDescendants()) do
                if v:IsA("BasePart") and v.CanCollide == true then
                    v.CanCollide = false
                end
            end
        end
    end)
end)

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/uzu01/lua/main/ui/uwuware.lua"))()
local w = library:CreateWindow("Project : Bursting Rage")
local FarmingFolder = w:AddFolder("Farming")

FarmingFolder:AddToggle({
    text = "Auto Farm", 
    state = _G.AutoFarm,
    callback = function(v) 
        _G.AutoFarm = v 
        
        AutoFarm()
    end
})

FarmingFolder:AddList({
    text = "Select Quest", 
    values = Quest, 
    callback = function(v) 
        SelectedQuest = v
    end
})

FarmingFolder:AddList({
    text = "Select Tool", 
    values = Tool, 
    callback = function(v) 
        SelectedTool = v
    end
})

FarmingFolder:AddToggle({
    text = "Bring Mob", 
    state = _G.AutoBring,
    callback = function(v) 
        _G.AutoBring = v 

        AutoBring()
    end
})

FarmingFolder:AddToggle({
    text = "Auto Skill", 
    state = _G.AutoSkill,
    callback = function(v) 
        _G.AutoSkill = v 

        AutoSkill()
    end
})

local StatFolder = w:AddFolder("Stat")

StatFolder:AddToggle({
    text = "Strength", 
    state = _G.Strength,
    callback = function(v) 
        _G.Strength = v 

        AStrength()
    end
})

StatFolder:AddToggle({
    text = "Defense", 
    state = _G.Defense,
    callback = function(v) 
        _G.Defense = v 

        ADefense()
    end
})

StatFolder:AddToggle({
    text = "Sword", 
    state = _G.Sword,
    callback = function(v) 
        _G.Sword = v 

        ASword()
    end
})

StatFolder:AddToggle({
    text = "Gun", 
    state = _G.Gun,
    callback = function(v) 
        _G.Gun = v 

        AGun()
    end
})

local TeleFolder = w:AddFolder("Teleports")

TeleFolder:AddList({
    text = "Select Island", 
    values = Island, 
    callback = function(v) 
        Teleport(game:GetService("Workspace").Map.SpawnPoints[v].CFrame)
    end
})

TeleFolder:AddList({
    text = "Select Npc", 
    values = Npc, 
    callback = function(v) 
        Teleport(game:GetService("Workspace").Map.NPCs[v].Head.CFrame)
    end
})

TeleFolder:AddList({
    text = "Select Shop", 
    values = Shop, 
    callback = function(va) 
        for i, v in pairs(game:GetService("Workspace").Map.Shops[va]:GetChildren()) do
            if v:IsA("Part") then
                Teleport(v.CFrame)
            end
        end
    end
})

local MiscFolder = w:AddFolder("Misc")

MiscFolder:AddToggle({
    text = "Auto Hide Name", 
    state = _G.Hide,
    callback = function(v) 
        _G.Hide = v 

        Hide()
    end
})

MiscFolder:AddToggle({
    text = "Auto Chest", 
    state = _G.AutoChest,
    callback = function(v) 
        _G.AutoChest = v 

        AutoChest()
    end
})

MiscFolder:AddToggle({
    text = "Auto Get Fruit",
    state = _G.AutoGetFruit,
    callback = function(v)
        _G.AutoGetFruit = v

        AutoGetFruit()
    end
})

MiscFolder:AddBind({
    text = "Toggle GUI", 
    key = "LeftAlt", 
    callback = function() 
        library:Close()
    end
})

local Util = loadstring(game:HttpGet("https://raw.githubusercontent.com/uzu01/lua/main/ui/stuff.lua"))()

MiscFolder:AddButton({
    text = "Rejoin",
    callback = function()
        Util:Rejoin()
    end
})

MiscFolder:AddButton({
    text = "Serverhop",
    callback = function()
        while task.wait() do
            local Servers = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. game.PlaceId .. '/servers/Public?sortOrder=Asc&limit=100'))
            for i,v in pairs(Servers.data) do
                if v.id ~= game.JobId then
                    wait()
                    game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, v.id)
                end
            end
        end
    end
})

MiscFolder:AddButton({
    text = "Script by Uzu",
    callback = function()
        setclipboard("discord.gg/waAsQFwcBn")
    end
})

MiscFolder:AddButton({
    text = "Discord",
    callback = function()
        setclipboard("discord.gg/waAsQFwcBn")
    end
})

library:Init()